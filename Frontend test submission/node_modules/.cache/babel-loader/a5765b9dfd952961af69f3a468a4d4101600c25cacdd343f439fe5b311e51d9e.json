{"ast":null,"code":"import axios from 'axios';\nconst client = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL || 'http://localhost:4000',\n  timeout: 8000\n});\nexport async function createShortUrls(items) {\n  // items: [{ longUrl, validityMinutes?, preferredCode? }, ...]\n  const responses = await Promise.all(items.map(async it => {\n    const {\n      data\n    } = await client.post('/shorten', {\n      longUrl: it.longUrl,\n      validityMinutes: it.validityMinutes || undefined,\n      preferredCode: it.preferredCode || undefined\n    });\n    // normalize result\n    return {\n      code: data.code || data.shortCode || data.id,\n      shortUrl: data.shortUrl || data.shortURL || data.url,\n      longUrl: data.longUrl || it.longUrl,\n      createdAt: data.createdAt || data.created_at || new Date().toISOString(),\n      expiresAt: data.expiresAt || data.expiry || null\n    };\n  }));\n  return responses;\n}\nexport async function fetchStats() {\n  const {\n    data\n  } = await client.get('/stats');\n  // Expect array; normalize fields\n  const list = Array.isArray(data) ? data : data.items || [];\n  return list.map(item => {\n    var _item$clicks, _item$totalClicks;\n    return {\n      code: item.code || item.shortCode || item.id,\n      shortUrl: item.shortUrl || item.shortURL || item.url,\n      longUrl: item.longUrl || item.originalUrl,\n      createdAt: item.createdAt || item.created_at,\n      expiresAt: item.expiresAt || item.expiry,\n      clicks: (_item$clicks = item.clicks) !== null && _item$clicks !== void 0 ? _item$clicks : (_item$totalClicks = item.totalClicks) !== null && _item$totalClicks !== void 0 ? _item$totalClicks : 0,\n      clickDetails: item.clickDetails || item.clicksDetailed || []\n    };\n  });\n}","map":{"version":3,"names":["axios","client","create","baseURL","process","env","REACT_APP_API_BASE_URL","timeout","createShortUrls","items","responses","Promise","all","map","it","data","post","longUrl","validityMinutes","undefined","preferredCode","code","shortCode","id","shortUrl","shortURL","url","createdAt","created_at","Date","toISOString","expiresAt","expiry","fetchStats","get","list","Array","isArray","item","_item$clicks","_item$totalClicks","originalUrl","clicks","totalClicks","clickDetails","clicksDetailed"],"sources":["C:/Users/soham/Downloads/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst client = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL || 'http://localhost:4000',\n  timeout: 8000\n});\n\nexport async function createShortUrls(items) {\n  // items: [{ longUrl, validityMinutes?, preferredCode? }, ...]\n  const responses = await Promise.all(items.map(async (it) => {\n    const { data } = await client.post('/shorten', {\n      longUrl: it.longUrl,\n      validityMinutes: it.validityMinutes || undefined,\n      preferredCode: it.preferredCode || undefined\n    });\n    // normalize result\n    return {\n      code: data.code || data.shortCode || data.id,\n      shortUrl: data.shortUrl || data.shortURL || data.url,\n      longUrl: data.longUrl || it.longUrl,\n      createdAt: data.createdAt || data.created_at || new Date().toISOString(),\n      expiresAt: data.expiresAt || data.expiry || null\n    };\n  }));\n\n  return responses;\n}\n\nexport async function fetchStats() {\n  const { data } = await client.get('/stats');\n  // Expect array; normalize fields\n  const list = Array.isArray(data) ? data : (data.items || []);\n  return list.map(item => ({\n    code: item.code || item.shortCode || item.id,\n    shortUrl: item.shortUrl || item.shortURL || item.url,\n    longUrl: item.longUrl || item.originalUrl,\n    createdAt: item.createdAt || item.created_at,\n    expiresAt: item.expiresAt || item.expiry,\n    clicks: item.clicks ?? (item.totalClicks ?? 0),\n    clickDetails: item.clickDetails || item.clicksDetailed || []\n  }));\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC1BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;EACtEC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,OAAO,eAAeC,eAAeA,CAACC,KAAK,EAAE;EAC3C;EACA,MAAMC,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACH,KAAK,CAACI,GAAG,CAAC,MAAOC,EAAE,IAAK;IAC1D,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMd,MAAM,CAACe,IAAI,CAAC,UAAU,EAAE;MAC7CC,OAAO,EAAEH,EAAE,CAACG,OAAO;MACnBC,eAAe,EAAEJ,EAAE,CAACI,eAAe,IAAIC,SAAS;MAChDC,aAAa,EAAEN,EAAE,CAACM,aAAa,IAAID;IACrC,CAAC,CAAC;IACF;IACA,OAAO;MACLE,IAAI,EAAEN,IAAI,CAACM,IAAI,IAAIN,IAAI,CAACO,SAAS,IAAIP,IAAI,CAACQ,EAAE;MAC5CC,QAAQ,EAAET,IAAI,CAACS,QAAQ,IAAIT,IAAI,CAACU,QAAQ,IAAIV,IAAI,CAACW,GAAG;MACpDT,OAAO,EAAEF,IAAI,CAACE,OAAO,IAAIH,EAAE,CAACG,OAAO;MACnCU,SAAS,EAAEZ,IAAI,CAACY,SAAS,IAAIZ,IAAI,CAACa,UAAU,IAAI,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACxEC,SAAS,EAAEhB,IAAI,CAACgB,SAAS,IAAIhB,IAAI,CAACiB,MAAM,IAAI;IAC9C,CAAC;EACH,CAAC,CAAC,CAAC;EAEH,OAAOtB,SAAS;AAClB;AAEA,OAAO,eAAeuB,UAAUA,CAAA,EAAG;EACjC,MAAM;IAAElB;EAAK,CAAC,GAAG,MAAMd,MAAM,CAACiC,GAAG,CAAC,QAAQ,CAAC;EAC3C;EACA,MAAMC,IAAI,GAAGC,KAAK,CAACC,OAAO,CAACtB,IAAI,CAAC,GAAGA,IAAI,GAAIA,IAAI,CAACN,KAAK,IAAI,EAAG;EAC5D,OAAO0B,IAAI,CAACtB,GAAG,CAACyB,IAAI;IAAA,IAAAC,YAAA,EAAAC,iBAAA;IAAA,OAAK;MACvBnB,IAAI,EAAEiB,IAAI,CAACjB,IAAI,IAAIiB,IAAI,CAAChB,SAAS,IAAIgB,IAAI,CAACf,EAAE;MAC5CC,QAAQ,EAAEc,IAAI,CAACd,QAAQ,IAAIc,IAAI,CAACb,QAAQ,IAAIa,IAAI,CAACZ,GAAG;MACpDT,OAAO,EAAEqB,IAAI,CAACrB,OAAO,IAAIqB,IAAI,CAACG,WAAW;MACzCd,SAAS,EAAEW,IAAI,CAACX,SAAS,IAAIW,IAAI,CAACV,UAAU;MAC5CG,SAAS,EAAEO,IAAI,CAACP,SAAS,IAAIO,IAAI,CAACN,MAAM;MACxCU,MAAM,GAAAH,YAAA,GAAED,IAAI,CAACI,MAAM,cAAAH,YAAA,cAAAA,YAAA,IAAAC,iBAAA,GAAKF,IAAI,CAACK,WAAW,cAAAH,iBAAA,cAAAA,iBAAA,GAAI,CAAE;MAC9CI,YAAY,EAAEN,IAAI,CAACM,YAAY,IAAIN,IAAI,CAACO,cAAc,IAAI;IAC5D,CAAC;EAAA,CAAC,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}